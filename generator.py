import json
import openai
import random


class MessageGenerator:
    def __init__(self, api_key):
        self.api_key = api_key
        openai.api_key = api_key

    def generate_welcome_message(self):
        # List of possible welcome message prompts in Russian
        welcome_prompts = [
            "Добро пожаловать мой друг! Что нового у тебя?",
            "Классная транса у тебя, посижу поворкую с тобой, я балдюююю",
            "Доброго времени суток! Как я могу сделать твой день особенным?",
            "Здравствуйте! Чем ты можешь сегодня нас порадовать?",
        ]

        # Choose a random welcome prompt
        welcome_prompt = random.choice(welcome_prompts)

        return welcome_prompt

    def generate_gpt_feedback(self, messsage):
        response = openai.Completion.create(
            engine="davinci",  # Choose the appropriate engine
            prompt=messsage,
            max_tokens=50,  # Adjust as needed
        )

        return response.choices[0].text

    def generate_random_phase(self):
        funny_love_phrases = [
            "Любовь - это как велосипед, ее можно исследовать вдоль и поперек!",
            "Когда два велосипеда встречаются на пути, это называется велосипедной романтикой!",
            "Велосипедная поездка с любимым человеком - это колесофория!",
            "Любовь подобна велосипедной цепи - всегда нужно поддерживать ее в хорошем состоянии.",
            "С любовью, даже крутая гора становится легкой как велосипедный спуск.",
            "Как велосипедная шина, любовь может быть немного плоской иногда, но ее всегда можно накачать!",
            "Истинная любовь - это как надежный велосипедный фонарь, который светит в самую темную ночь.",
            "Любовь - это когда вы готовы делиться даже последним куском пиццы на велосипедной остановке.",
            "Как и велосипедные педали, любовь работает лучше, когда вы двигаетесь вперед вместе.",
            "Любовь - это когда вы готовы пойти на прогулку на велосипеде, даже если это дождь!",
            "Велосипед - это способ показать своей второй половине, что вы готовы идти в одном направлении.",
            "Любовь и велосипед - две вещи, которые всегда стоит подкачивать!",
            "Любовь - это как велосипед, иногда приходится переключать передачи, чтобы подняться на вершину!",
            "Когда два велосипедиста влюблены друг в друга, они всегда идут на одной волне!",
            "Любовь - это когда вы готовы подарить свой последний звонок на велосипеде своему спутнику!",
            "Велосипед и любовь - две вещи, которые всегда делают нашу жизнь ярче и интереснее!",
            "Любовь - это когда вы и ваш партнер велосипедисты, и ваша жизнь полна приключений!",
            "Как и на велосипеде, в любви иногда бывают небольшие падения, но важно встать и продолжить движение!",
            "Любовь - это когда ваше сердце бьется в такт с педалями велосипеда!",
            "Как и на велосипеде, в любви всегда есть место для новых приключений и смеха!",
            "Любовь - это как катание на велосипеде без рук, иногда волнительно, но очень весело!",
            "С любовью, даже самый крутой подъем на велосипеде становится достижимым!",
            "Любовь - это как велосипедная гонка, где важно не только прийти первым, но и прийти вдвоем!",
            "Велосипед и любовь - две вещи, которые поднимают настроение даже в самый пасмурный день!",
            "Любовь - это когда вы готовы поделиться своим велосипедом с кем-то особенным!",
            "Как и велосипедная дорожка, любовь может быть извилистой, но она всегда ведет к счастью!",
            "Любовь - это когда вы готовы кататься на велосипеде вместе и в дождь, и в снег!",
            "С любовью, даже самый тяжелый велосипедный подъем становится легким!",
            "Любовь - это как велосипедная гонка, где вы и ваш партнер всегда находитесь в команде победителей!",
            "Велосипед и любовь - две вещи, которые делают нашу жизнь ярче и веселее!",
        ]

        random_phase = random.choice(funny_love_phrases)
        return random_phase

    def generate_random_phase_from_json(self, file):
        f = open("phrases.json", "r")
        json_load = json.loads(f.read().encode("utf-8"))
        return random.choice(json_load["data"])[0]
